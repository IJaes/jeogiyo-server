name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main", "develop" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/jeogiyo
  VERSION: latest

jobs:
  Deploy:
    name: Build Docker Image and Deploy EC2
    runs-on: ubuntu-latest
    environment: deploy
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Build container image
        run: |
          IMAGE_RAW=${REGISTRY}/${IMAGE_NAME}:${VERSION}
          IMAGE=$(echo "$IMAGE_RAW" | tr '[:upper:]' '[:lower:]')
          chmod +x gradlew
          ./gradlew bootJar
          docker build -t "$IMAGE" .
          echo "IMAGE_URI=$IMAGE" >> $GITHUB_ENV

      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish container image
        run: docker push "${{ env.IMAGE_URI }}"

      - name: "Validate required secrets (environment: deploy)"
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          REMOTE_IP: ${{ secrets.REMOTE_IP }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
        run: |
          missing=0
          check() { if [ -z "$1" ]; then echo "::error::Missing secret: $2"; missing=1; fi; }
          check "$DB_URL" DB_URL
          check "$DB_USERNAME" DB_USERNAME
          check "$DB_PASSWORD" DB_PASSWORD
          check "$REMOTE_IP" REMOTE_IP
          check "$REMOTE_USER" REMOTE_USER
          check "$REMOTE_PRIVATE_KEY" REMOTE_PRIVATE_KEY
          if [ "$missing" -eq 1 ]; then exit 1; fi

      - name: Deploy on EC2 over SSH (public image → no login)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          port: 22
          script: |
            echo "배포 시작"
            sudo docker stop jeogiyo || true
            sudo docker rm jeogiyo || true
            sudo docker rmi "${{ env.IMAGE_URI }}" || true

            echo "Docker registry 로그인"
            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            echo "이미지 Pull"
            sudo docker pull "${{ env.IMAGE_URI }}"

            echo "컨테이너 기동"
            DB_URL="${{ secrets.DB_URL }}"
            DB_USERNAME="${{ secrets.DB_USERNAME }}"
            DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            sudo docker run -d --name jeogiyo -p 3000:8080 \
              -e DB_URL="$DB_URL" \
              -e DB_USERNAME="$DB_USERNAME" \
              -e DB_PASSWORD="$DB_PASSWORD" \
              -e DB_DDL_AUTO=update \
              "${{ env.IMAGE_URI }}"